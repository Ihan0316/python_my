️⃣ MySQL 연결 (pymysql.connect)
🔹 개념 및 정의
MySQL/MariaDB에 연결하기 위한 기본적인 코드입니다.
🔹 예제 코드




import pymysql
con = pymysql.connect(
    host='127.0.0.1',
    user='webuser',
    password='webuser',
    database='webdb',
    charset='utf8')
print("DB 연결 성공!")
con.close()
🔹 출력 결과



DB연결 성공!
🔹 실무 활용 사례
	• 데이터베이스 연결 후 CRUD(Create, Read, Update, Delete) 작업 수행

2️⃣ 커서 생성 (cursor())
🔹 개념 및 정의
DB에서 데이터를 조회하거나 실행하기 위해 커서를 생성하는 과정입니다.
🔹 예제 코드



cur = con.cursor()
print("커서 생성 성공!")
🔹 출력 결과


커서 생성 성공!
🔹 실무 활용 사례
	• SQL 실행을 위해 반드시 필요한 과정

3️⃣ 데이터 조회 (SELECT * FROM)
🔹 개념 및 정의
MySQL에서 테이블 데이터를 조회하는 기본적인 SQL 문법입니다.
🔹 예제 코드



cur.execute("SELECT * FROM book")
rows = cur.fetchall()
for row in rows:
    print(row)
🔹 출력 결과 예시

bash

(1, '파이썬 기본서', '한빛미디어', 300, '김철수')
(2, '데이터 분석', '위키북스', 250, '이영희')
🔹 실무 활용 사례
	• 데이터를 읽어와서 화면에 출력하거나, 분석에 활용

4️⃣ 단일 행 조회 (fetchone())
🔹 개념 및 정의
첫 번째 행만 가져오는 방법입니다.
🔹 예제 코드



row = cur.fetchone()
print(row)
🔹 출력 결과 예시

bash

(1, '파이썬 기본서', '한빛미디어', 300, '김철수')
🔹 실무 활용 사례
	• 특정 조건의 하나의 데이터만 가져올 때

5️⃣ 여러 개의 데이터 조회 (fetchmany(n))
🔹 개념 및 정의
특정 개수만큼 데이터를 가져오는 방법입니다.
🔹 예제 코드



rows = cur.fetchmany(2)
for row in rows:
    print(row)
🔹 출력 결과 예시

bash

(1, '파이썬 기본서', '한빛미디어', 300, '김철수')
(2, '데이터 분석', '위키북스', 250, '이영희')
🔹 실무 활용 사례
	• 페이지네이션(Pagination) 기능 구현

6️⃣ 데이터 삽입 (INSERT INTO)
🔹 개념 및 정의
새로운 데이터를 DB에 삽입하는 방법입니다.
🔹 예제 코드



sql = "INSERT INTO book (title, pub, pages, author) VALUES (%s, %s, %s, %s)"cur.execute(sql, ('머신러닝 입문', '길벗', 320, '박민수'))
con.commit()
🔹 출력 결과


1개의 행이 추가됨
🔹 실무 활용 사례
	• 사용자 입력 데이터를 데이터베이스에 저장

7️⃣ 데이터 수정 (UPDATE)
🔹 개념 및 정의
특정 데이터의 값을 변경하는 SQL 문법입니다.
🔹 예제 코드



sql = "UPDATE book SET pages = %s WHERE id = %s"cur.execute(sql, (350, 1))
con.commit()
🔹 출력 결과


1개의 행이 수정됨
🔹 실무 활용 사례
	• 사용자가 입력한 데이터를 업데이트할 때

8️⃣ 데이터 삭제 (DELETE FROM)
🔹 개념 및 정의
특정 데이터를 삭제하는 SQL 문법입니다.
🔹 예제 코드



sql = "DELETE FROM book WHERE id = %s"cur.execute(sql, (1,))
con.commit()
🔹 출력 결과


1개의 행이 삭제됨
🔹 실무 활용 사례
	• 오래된 데이터를 정리할 때

9️⃣ 테이블 생성 (CREATE TABLE)
🔹 개념 및 정의
새로운 테이블을 생성하는 SQL 문법입니다.
🔹 예제 코드



sql = """
CREATE TABLE book (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(200),
    pub VARCHAR(45),
    pages INT,
    author VARCHAR(100)
)
"""cur.execute(sql)
🔹 출력 결과


테이블 생성 성공!
🔹 실무 활용 사례
	• 새로운 서비스 기능을 추가할 때

🔟 테이블 삭제 (DROP TABLE)
🔹 개념 및 정의
테이블을 삭제하는 SQL 문법입니다.
🔹 예제 코드



cur.execute("DROP TABLE book")
🔹 출력 결과


테이블 삭제 성공!
🔹 실무 활용 사례
	• 필요 없는 테이블을 삭제할 때

---------------------------------------------
1️⃣ Tk() (메인 윈도우 생성)
🔹 개념 및 정의
	• Tkinter의 기본 윈도우를 생성하는 함수
	• GUI 프로그램의 메인 창 역할을 합니다.
🔹 예제 코드



from tk inter import Tk
window = Tk()  # 메인 창 생성window.title("도서 관리 시스템")  # 창 제목 설정window.geometry("700x400")  # 창 크기 설정window.mainloop()  # 이벤트 루프 실행
🔹 출력 결과
GUI 창이 700x400 크기로 실행됨
🔹 실무 활용 사례
	• GUI 애플리케이션을 만들 때 필수적으로 사용됨

2️⃣ Label() (텍스트 라벨 생성)
🔹 개념 및 정의
	• 사용자가 볼 수 있는 텍스트를 출력하는 위젯
🔹 예제 코드



from tk inter import Tk, Label
window = Tk()
label = Label(window, text="도서 제목 입력")  # 텍스트 라벨 생성label.pack()  # 화면에 표시window.mainloop()
🔹 출력 결과
GUI 창에 "도서 제목 입력" 텍스트가 표시됨
🔹 실무 활용 사례
	• 입력 필드 위에 설명을 표시할 때 사용됨

3️⃣ Entry() (입력 필드)
🔹 개념 및 정의
	• 사용자가 텍스트를 입력할 수 있는 필드 생성
🔹 예제 코드



from tk inter import Tk, Entry
window = Tk()
entry = Entry(window, width=20)  # 입력 필드 생성entry.pack()
window.mainloop()
🔹 출력 결과
GUI 창에 텍스트를 입력할 수 있는 필드가 표시됨
🔹 실무 활용 사례
	• 로그인 창의 사용자 ID, 비밀번호 입력

4️⃣ Button() (버튼 생성)
🔹 개념 및 정의
	• 사용자가 클릭할 수 있는 버튼을 생성하는 위젯
🔹 예제 코드



from tk inter import Tk, Button
window = Tk()
btn = Button(window, text="클릭하세요")
btn.pack()
window.mainloop()
🔹 출력 결과
GUI 창에 "클릭하세요" 버튼이 표시됨
🔹 실무 활용 사례
	• 데이터 입력, 조회, 수정, 삭제 등의 동작을 실행할 때 사용됨

5️⃣ Frame() (컨테이너 생성)
🔹 개념 및 정의
	• 여러 개의 위젯을 그룹화하여 관리하는 컨테이너 역할
🔹 예제 코드



from tk inter import Tk, Frame, Button
window = Tk()
frame = Frame(window)  # 프레임 생성frame.pack()
Button(frame, text="버튼 1").pack(side="left")
Button(frame, text="버튼 2").pack(side="right")
window.mainloop()
🔹 출력 결과
두 개의 버튼이 좌우 정렬된 상태로 표시됨
🔹 실무 활용 사례
	• 입력 필드와 버튼을 그룹화하여 배치할 때 사용

6️⃣ Listbox() (리스트 박스 생성)
🔹 개념 및 정의
	• 여러 개의 데이터를 리스트 형태로 표시
🔹 예제 코드



from tk inter import Tk, Listbox
window = Tk()
listbox = Listbox(window)
listbox.pack()
listbox.insert(0, "")
listbox.insert(1, "JavaScript")
listbox.insert(2, "C++")
window.mainloop()
🔹 출력 결과
GUI 창에 "", "JavaScript", "C++" 리스트가 표시됨
🔹 실무 활용 사례
	• 데이터베이스의 내용을 리스트 형태로 보여줄 때 사용됨

7️⃣ pack() (위젯 배치)
🔹 개념 및 정의
	• 위젯을 수직 또는 수평으로 배치하는 방법
🔹 예제 코드



from tk inter import Tk, Button
window = Tk()
Button(window, text="위").pack(side="top")
Button(window, text="아래").pack(side="bottom")
window.mainloop()
🔹 출력 결과
버튼이 위쪽과 아래쪽에 정렬됨
🔹 실무 활용 사례
	• 간단한 버튼 레이아웃을 만들 때

8️⃣ grid() (위젯을 행, 열 배치)
🔹 개념 및 정의
	• 표 형태의 그리드 배치를 제공하는 레이아웃 관리 방식
🔹 예제 코드



from tk inter import Tk, Label, Entry
window = Tk()
Label(window, text="이름").grid(row=0, column=0)
Entry(window).grid(row=0, column=1)
Label(window, text="이메일").grid(row=1, column=0)
Entry(window).grid(row=1, column=1)
window.mainloop()
🔹 출력 결과
GUI 창에 "이름"과 "이메일" 필드가 표 형태로 정렬됨
🔹 실무 활용 사례
	• 로그인 화면, 회원 가입 화면

9️⃣ place() (위젯 절대 위치 지정)
🔹 개념 및 정의
	• 위젯을 픽셀 단위로 위치 지정하는 방법
🔹 예제 코드



from tk inter import Tk, Button
window = Tk()
btn = Button(window, text="절대 위치 버튼")
btn.place(x=50, y=50)  # x=50, y=50 위치에 배치window.mainloop()
🔹 출력 결과
버튼이 (50,50) 위치에 표시됨
🔹 실무 활용 사례
	• 특정 위치에 정확한 좌표로 배치가 필요할 때

🔟 messagebox (알림 창)
🔹 개념 및 정의
	• 사용자의 확인, 오류, 경고 메시지를 띄우는 팝업
🔹 예제 코드



from tk inter import Tk, messagebox
window = Tk()
messagebox.showinfo("알림", "작업이 완료되었습니다!")
🔹 출력 결과
"작업이 완료되었습니다!" 메시지 팝업 창이 표시됨
🔹 실무 활용 사례
	• 데이터 입력, 삭제, 수정 후 사용자에게 알림 제공


1️⃣ Checkbutton() (체크박스 생성)
🔹 개념 및 정의
	• 사용자가 선택할 수 있는 체크박스 위젯을 생성합니다.
🔹 예제 코드



from tk inter import Tk, Checkbutton, IntVar
window = Tk()
chk_var = IntVar()  # 0(체크 해제) 또는 1(체크)chk = Checkbutton(window, text="동의합니다", variable=chk_var)
chk.pack()
window.mainloop()
🔹 출력 결과
GUI 창에 "동의합니다" 체크박스가 표시됨
🔹 실무 활용 사례
	• 약관 동의 또는 옵션 선택 기능 구현

2️⃣ Radiobutton() (라디오 버튼 생성)
🔹 개념 및 정의
	• 하나의 그룹 내에서 하나만 선택 가능한 버튼을 생성합니다.
🔹 예제 코드



from tk inter import Tk, Radiobutton, IntVar
window = Tk()
radio_var = IntVar()
Radiobutton(window, text="옵션 1", variable=radio_var, value=1).pack()
Radiobutton(window, text="옵션 2", variable=radio_var, value=2).pack()
window.mainloop()
🔹 출력 결과
두 개의 "옵션 1", "옵션 2" 라디오 버튼이 표시됨 (하나만 선택 가능)
🔹 실무 활용 사례
	• 성별 선택 (남/여) 또는 결제 방식 선택

3️⃣ Scrollbar() (스크롤바 추가)
🔹 개념 및 정의
	• 텍스트 또는 리스트가 많을 때 스크롤이 가능하도록 만드는 위젯
🔹 예제 코드



from tk inter import Tk, Text, Scrollbar
window = Tk()
text = Text(window, height=10, width=40)
text.pack(side="left")
scroll = Scrollbar(window, command=text.yview)
scroll.pack(side="right", fill="y")
text.config(y scroll command=scroll.set)
window.mainloop()
🔹 출력 결과
텍스트 상자에 세로 스크롤바가 추가됨
🔹 실무 활용 사례
	• 긴 문서 또는 데이터 리스트를 표시할 때 사용

4️⃣ Toplevel() (새로운 윈도우 창 생성)
🔹 개념 및 정의
	• 새로운 윈도우 창을 생성하는 기능
🔹 예제 코드



from tk inter import Tk, Toplevel, Button
window = Tk()
def open_new_window():
    new_win = Toplevel(window)
    new_win.title("새 창")
    new_win.geometry("300x200")
Button(window, text="새 창 열기", command=open_new_window).pack()
window.mainloop()
🔹 출력 결과
버튼 클릭 시 새로운 창이 열림
🔹 실무 활용 사례
	• 설정 창, 도움말 창, 팝업 창 구현

5️⃣ Spinbox() (숫자 조정 위젯)
🔹 개념 및 정의
	• 숫자를 증가/감소 버튼으로 조정할 수 있는 위젯
🔹 예제 코드



from tk inter import Tk, Spinbox
window = Tk()
spinbox = Spinbox(window, from_=1, to=10)
spinbox.pack()
window.mainloop()
🔹 출력 결과
숫자 조절 가능한 입력 필드가 표시됨
🔹 실무 활용 사례
	• 수량 선택, 페이지 이동, 나이 입력 등에 사용됨

6️⃣ Combobox() (드롭다운 목록 생성)
🔹 개념 및 정의
	• 사용자가 여러 개의 옵션 중에서 하나를 선택할 수 있는 드롭다운 목록
🔹 예제 코드



from tk inter import Tk
from tk inter.ttk import Combobox
window = Tk()
combo = Combobox(window, values=["", "Java", "C++"])
combo.pack()
window.mainloop()
🔹 출력 결과
"", "Java", "C++" 중 선택 가능한 드롭다운 생성
🔹 실무 활용 사례
	• 지역 선택, 언어 선택, 카테고리 선택 구현

7️⃣ Canvas() (그래픽 요소 추가)
🔹 개념 및 정의
	• GUI 창에 도형, 이미지, 그래픽 요소를 추가하는 기능
🔹 예제 코드



from tk inter import Tk, Canvas
window = Tk()
canvas = Canvas(window, width=200, height=100)
canvas.pack()
canvas.create_rectangle(50, 20, 150, 80, fill="blue")  # 파란색 사각형window.mainloop()
🔹 출력 결과
GUI 창에 파란색 사각형이 표시됨
🔹 실무 활용 사례
	• 간단한 그래프, 다이어그램, 도형을 그릴 때 사용

8️⃣ PhotoImage() (이미지 표시)
🔹 개념 및 정의
	• GUI 창에 이미지를 표시하는 방법
🔹 예제 코드



from tk inter import Tk, Label, PhotoImage
window = Tk()
img = PhotoImage(file="example.png")  # 이미지 파일 label = Label(window, image=img)
label.pack()
window.mainloop()
🔹 출력 결과
이미지가 GUI 창에 표시됨
🔹 실무 활용 사례
	• 앱 아이콘, 프로필 사진, 제품 이미지 등 표시

9️⃣ after() (일정 시간 후 실행)
🔹 개념 및 정의
	• 일정 시간이 지난 후 특정 함수가 실행되도록 설정
🔹 예제 코드



from tk inter import Tk, Label
window = Tk()
label = Label(window, text="5초 후 변경됩니다!")
label.pack()
defchange_text():
    label.config(text="변경 완료!")
window.after(5000, change_text)  # 5초 후 실행 window.mainloop()
🔹 출력 결과
5초 후 "변경 완료!"로 텍스트가 변경됨
🔹 실무 활용 사례
	• 타이머, 알람, 자동 갱신 기능 구현

🔟 bind() (키보드 및 마우스 이벤트 처리)
🔹 개념 및 정의
	• 특정 키보드 키 또는 마우스 클릭에 반응하여 이벤트를 실행
🔹 예제 코드



from tk inter import Tk, Label
window = Tk()
label = Label(window, text="키를 눌러보세요")
label.pack()
defkey_pressed(event):
    label.config(text=f"'{event.char}' 키가 눌렸습니다")
window.bind("<KeyPress>", key_pressed)
window.mainloop()
🔹 출력 결과
키보드를 누르면 "A 키가 눌렸습니다" 처럼 변경됨
🔹 실무 활용 사례
	• 키보드 단축키, 마우스 클릭 이벤트 처리


